{"ast":null,"code":"var _jsxFileName = \"D:\\\\1\\u4EE3\\u7801\\\\hmreact\\\\react-baisc\\\\src\\\\components\\\\TodoMain.js\";\nimport classNames from 'classnames';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TodoMain extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      // 当前双击的id\n      currentId: '',\n      // 当前双击的名字\n      currentName: ''\n    };\n\n    this.delTodo = id => {\n      console.log('id', id);\n      this.props.delTodoById(id);\n    };\n\n    this.updateDone = id => {\n      this.props.updateDoneById(id);\n    };\n\n    this.showEdit = _ref => {\n      let {\n        id,\n        name\n      } = _ref;\n      this.setState({\n        currentId: id,\n        currentName: name\n      });\n    };\n\n    this.handleKeyUp = e => {\n      if (e.keyCode === 27) {\n        //按了ESC,取消修改\n        this.setState({\n          currentId: '',\n          currentName: ''\n        });\n      }\n\n      if (e.keyCode === 13) {\n        //添加\n        this.props.editTodo(this.state.currentId, this.state.currentName); //关闭\n\n        this.setState({\n          currentId: '',\n          currentName: ''\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      list,\n      type\n    } = this.props;\n    let showList = [];\n\n    if (type === 'active') {\n      showList = list.filter(item => !item.done);\n    } else if (type === 'completes') {\n      showList = list.filter(item => !item.done);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"toggle-all\",\n        className: \"toggle-all\",\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"toggle-all\",\n        children: \"Mark all as complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"todo-list\",\n        children: list.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: classNames({\n              completed: item.done,\n              editing: item.id === this.state.currentId\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"view\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"toggle\",\n                type: \"checkbox\",\n                checked: item.done,\n                onChange: () => this.updateDone(item.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                onDoubleClick: () => this.showEdit(item),\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"destroy\",\n                onClick: () => this.delTodo(item.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"edit\",\n              value: this.state.currentName,\n              onChange: e => {\n                this.setState({\n                  currentName: e.target.value\n                });\n              },\n              onKeyUp: this.handleKeyUp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  } //删除任务\n\n\n}","map":{"version":3,"sources":["D:/1代码/hmreact/react-baisc/src/components/TodoMain.js"],"names":["classNames","React","Component","TodoMain","state","currentId","currentName","delTodo","id","console","log","props","delTodoById","updateDone","updateDoneById","showEdit","name","setState","handleKeyUp","e","keyCode","editTodo","render","list","type","showList","filter","item","done","map","completed","editing","target","value"],"mappings":"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","sourcesContent":["import classNames from 'classnames'\r\nimport React, { Component } from 'react'\r\n\r\nexport default class TodoMain extends Component {\r\n  state = {\r\n    // 当前双击的id\r\n    currentId: '',\r\n    // 当前双击的名字\r\n    currentName: '',\r\n  }\r\n  render() {\r\n    const { list,type } = this.props\r\n    let showList = []\r\n    if (type==='active'){\r\n      showList = list.filter(item=>!item.done)\r\n    }else if(type==='completes'){\r\n      showList = list.filter(item=>!item.done)\r\n    }\r\n    return (\r\n      <section className=\"main\">\r\n        <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\" />\r\n        <label for=\"toggle-all\">Mark all as complete</label>\r\n        <ul className=\"todo-list\">\r\n          {list.map((item) => {\r\n            return (\r\n              <li\r\n                className={classNames({\r\n                  completed: item.done,\r\n                  editing: item.id === this.state.currentId,\r\n                })}\r\n                key={item.id}\r\n              >\r\n                <div className=\"view\">\r\n                  <input\r\n                    className=\"toggle\"\r\n                    type=\"checkbox\"\r\n                    checked={item.done}\r\n                    onChange={() => this.updateDone(item.id)}\r\n                  />\r\n                  <label onDoubleClick={() => this.showEdit(item)}>\r\n                    {item.name}\r\n                  </label>\r\n                  <button\r\n                    className=\"destroy\"\r\n                    onClick={() => this.delTodo(item.id)}\r\n                  ></button>\r\n                </div>\r\n                <input\r\n                  className=\"edit\"\r\n                  value={this.state.currentName}\r\n                  onChange={(e) => {\r\n                    this.setState({ currentName: e.target.value })\r\n                  }}\r\n                  onKeyUp={this.handleKeyUp}\r\n                />\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n      </section>\r\n    )\r\n  }\r\n  //删除任务\r\n  delTodo = (id) => {\r\n    console.log('id', id)\r\n    this.props.delTodoById(id)\r\n  }\r\n  //修改任务状态\r\n  updateDone = (id) => {\r\n    this.props.updateDoneById(id)\r\n  }\r\n  showEdit = ({ id, name }) => {\r\n    this.setState({\r\n      currentId: id,\r\n      currentName: name,\r\n    })\r\n  }\r\n  handleKeyUp = (e) => {\r\n    if (e.keyCode === 27) {\r\n      //按了ESC,取消修改\r\n      this.setState({\r\n        currentId: '',\r\n        currentName: '',\r\n      })\r\n    }\r\n    if (e.keyCode === 13) {\r\n      //添加\r\n      this.props.editTodo(this.state.currentId, this.state.currentName)\r\n      //关闭\r\n      this.setState({\r\n        currentId: '',\r\n        currentName: '',\r\n      })\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}