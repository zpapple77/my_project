{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\my_project\\\\Todo\\u6848\\u4F8B\\\\src\\\\index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/base.css';\nimport './styles/index.css'; //导入组件\n\nimport TodoHeader from './components/TodoHeader';\nimport TodoMain from './components/TodoMain';\nimport TodoFooter from './components/TodoFooter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      list: [],\n      // 有三个值  all  active  completed\n      type: 'all'\n    };\n\n    this.delTodoById = id => {\n      this.setState({\n        list: this.state.list.filter(item => item.id !== id)\n      });\n    };\n\n    this.updateDoneById = id => {\n      //需要根据id吧对应任务的状态取反\n      this.setState({\n        list: this.state.list.map(item => {\n          if (item.id === id) {\n            return { ...item,\n              done: !item.done\n            };\n          } else {\n            return item;\n          }\n        })\n      });\n    };\n\n    this.addTodo = name => {\n      this.setState({\n        list: [{\n          id: Date.now(),\n          name,\n          done: false\n        }, ...this.state.list]\n      });\n    };\n\n    this.editTodo = (id, name) => {\n      this.setState({\n        list: this.state.list.map(item => {\n          if (item.id === id) {\n            return { ...item,\n              name\n            };\n          } else {\n            return item;\n          }\n        })\n      });\n    };\n\n    this.clearTodo = () => {\n      this.setState({\n        list: this.state.list.filter(item => !item.done)\n      });\n    };\n\n    this.changeType = type => {\n      console.log(type);\n      this.setState({\n        type\n      });\n    };\n\n    this.checkAll = check => {\n      this.setState({\n        list: this.state.list.map(item => {\n          return { ...item,\n            done: check\n          };\n        })\n      });\n    };\n  }\n\n  render() {\n    const {\n      list,\n      type\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(TodoHeader, {\n        addTodo: this.addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoMain, {\n        list: list,\n        delTodoById: this.delTodoById,\n        updateDoneById: this.updateDoneById,\n        editTodo: this.editTodo,\n        type: type,\n        checkAll: this.checkAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoFooter, {\n        list: list,\n        clearTodo: this.clearTodo,\n        type: type,\n        changeType: this.changeType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      list: JSON.parse(localStorage.getItem('todos')) || []\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('todos', JSON.stringify(this.state.list));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 115,\n  columnNumber: 17\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["D:/git/my_project/Todo案例/src/index.js"],"names":["React","Component","ReactDOM","TodoHeader","TodoMain","TodoFooter","App","state","list","type","delTodoById","id","setState","filter","item","updateDoneById","map","done","addTodo","name","Date","now","editTodo","clearTodo","changeType","console","log","checkAll","check","render","componentDidMount","JSON","parse","localStorage","getItem","componentDidUpdate","setItem","stringify","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/base.css'\nimport './styles/index.css'\n\n//导入组件\nimport TodoHeader from './components/TodoHeader'\nimport TodoMain from './components/TodoMain'\nimport TodoFooter from './components/TodoFooter'\n\nclass App extends Component {\n  state = {\n    list: [],\n    // 有三个值  all  active  completed\n    type: 'all',\n  }\n  render() {\n    const { list, type } = this.state\n\n    return (\n      <section className=\"todoapp\">\n        <TodoHeader addTodo={this.addTodo}></TodoHeader>\n        <TodoMain\n          list={list}\n          delTodoById={this.delTodoById}\n          updateDoneById={this.updateDoneById}\n          editTodo={this.editTodo}\n          type={type}\n          checkAll={this.checkAll}\n        ></TodoMain>\n        <TodoFooter\n          list={list}\n          clearTodo={this.clearTodo}\n          type={type}\n          changeType={this.changeType}\n        ></TodoFooter>\n      </section>\n    )\n  }\n  delTodoById = (id) => {\n    this.setState({\n      list: this.state.list.filter((item) => item.id !== id),\n    })\n  }\n  updateDoneById = (id) => {\n    //需要根据id吧对应任务的状态取反\n    this.setState({\n      list: this.state.list.map((item) => {\n        if (item.id === id) {\n          return {\n            ...item,\n            done: !item.done,\n          }\n        } else {\n          return item\n        }\n      }),\n    })\n  }\n  addTodo = (name) => {\n    this.setState({\n      list: [\n        {\n          id: Date.now(),\n          name,\n          done: false,\n        },\n        ...this.state.list,\n      ],\n    })\n  }\n  editTodo = (id, name) => {\n    this.setState({\n      list: this.state.list.map((item) => {\n        if (item.id === id) {\n          return {\n            ...item,\n            name,\n          }\n        } else {\n          return item\n        }\n      }),\n    })\n  }\n  clearTodo = () => {\n    this.setState({\n      list: this.state.list.filter((item) => !item.done),\n    })\n  }\n  changeType = (type) => {\n    console.log(type)\n    this.setState({ type })\n  }\n  checkAll = (check) => {\n    this.setState({\n      list: this.state.list.map((item) => {\n        return {\n          ...item,\n          done: check,\n        }\n      }),\n    })\n  }\n  componentDidMount() {\n    this.setState({\n      list: JSON.parse(localStorage.getItem('todos')) || [],\n    })\n  }\n  componentDidUpdate() {\n    localStorage.setItem('todos', JSON.stringify(this.state.list))\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}