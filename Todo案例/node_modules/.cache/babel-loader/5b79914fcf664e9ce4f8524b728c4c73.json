{"ast":null,"code":"var _jsxFileName = \"D:\\\\1\\u4EE3\\u7801\\\\hmreact\\\\react-baisc\\\\src\\\\components\\\\TodoFooter.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TodoFooter extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.clearTodo = () => {\n      this.props.clearTodo();\n    };\n\n    this.handleClick = type => {\n      this.props.changeType;\n    };\n  }\n\n  render() {\n    const {\n      list,\n      type\n    } = this.props;\n\n    if (list.length === 0) {\n      return null;\n    }\n\n    const leftCount = list.filter(item => !item.done).length;\n    const isShow = list.some(item => item.done);\n    return /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"todo-count\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: leftCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), \" item left\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: type === 'all' ? 'selected' : '',\n            onClick: () => this.handleClick(all),\n            href: \"#/\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: type === 'active' ? 'selected' : '',\n            onClick: () => this.handleClick(active),\n            href: \"#/active\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: type === 'completed' ? 'selected' : '',\n            onClick: () => this.handleClick(completed),\n            href: \"#/completed\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), isShow && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear-completed\",\n        onClick: this.clearTodo,\n        children: \"Clear completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/1代码/hmreact/react-baisc/src/components/TodoFooter.js"],"names":["React","Component","TodoFooter","clearTodo","props","handleClick","type","changeType","render","list","length","leftCount","filter","item","done","isShow","some","all","active","completed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,eAAe,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAkDhDE,SAlDgD,GAkDpC,MAAM;AAChB,WAAKC,KAAL,CAAWD,SAAX;AACD,KApD+C;;AAAA,SAqDhDE,WArDgD,GAqDjCC,IAAD,IAAU;AACtB,WAAKF,KAAL,CAAWG,UAAX;AACD,KAvD+C;AAAA;;AAChDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQH,MAAAA;AAAR,QAAiB,KAAKF,KAA5B;;AACA,QAAIK,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAO,IAAP;AACD;;AACD,UAAMC,SAAS,GAAGF,IAAI,CAACG,MAAL,CAAaC,IAAD,IAAU,CAACA,IAAI,CAACC,IAA5B,EAAkCJ,MAApD;AACA,UAAMK,MAAM,GAAGN,IAAI,CAACO,IAAL,CAAWH,IAAD,IAAUA,IAAI,CAACC,IAAzB,CAAf;AACA,wBACE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA,gCACE;AAAA,oBAASH;AAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA,gCACE;AAAA,iCACE;AACE,YAAA,SAAS,EAAEL,IAAI,KAAK,KAAT,GAAiB,UAAjB,GAA8B,EAD3C;AAEE,YAAA,OAAO,EAAE,MAAM,KAAKD,WAAL,CAAiBY,GAAjB,CAFjB;AAGE,YAAA,IAAI,EAAC,IAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAA,iCACE;AACE,YAAA,SAAS,EAAEX,IAAI,KAAK,QAAT,GAAoB,UAApB,GAAiC,EAD9C;AAEE,YAAA,OAAO,EAAE,MAAM,KAAKD,WAAL,CAAiBa,MAAjB,CAFjB;AAGE,YAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF,eAmBE;AAAA,iCACE;AACE,YAAA,SAAS,EAAEZ,IAAI,KAAK,WAAT,GAAuB,UAAvB,GAAoC,EADjD;AAEE,YAAA,OAAO,EAAE,MAAM,KAAKD,WAAL,CAAiBc,SAAjB,CAFjB;AAGE,YAAA,IAAI,EAAC,aAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAiCGJ,MAAM,iBACL;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKZ,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyCD;;AAjD+C","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class TodoFooter extends Component {\r\n  render() {\r\n    const { list, type } = this.props\r\n    if (list.length === 0) {\r\n      return null\r\n    }\r\n    const leftCount = list.filter((item) => !item.done).length\r\n    const isShow = list.some((item) => item.done)\r\n    return (\r\n      <footer className=\"footer\">\r\n        <span className=\"todo-count\">\r\n          <strong>{leftCount}</strong> item left\r\n        </span>\r\n        <ul className=\"filters\">\r\n          <li>\r\n            <a\r\n              className={type === 'all' ? 'selected' : ''}\r\n              onClick={() => this.handleClick(all)}\r\n              href=\"#/\"\r\n            >\r\n              All\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              className={type === 'active' ? 'selected' : ''}\r\n              onClick={() => this.handleClick(active)}\r\n              href=\"#/active\"\r\n            >\r\n              Active\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              className={type === 'completed' ? 'selected' : ''}\r\n              onClick={() => this.handleClick(completed)}\r\n              href=\"#/completed\"\r\n            >\r\n              Completed\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        {isShow && (\r\n          <button className=\"clear-completed\" onClick={this.clearTodo}>\r\n            Clear completed\r\n          </button>\r\n        )}\r\n      </footer>\r\n    )\r\n  }\r\n  clearTodo = () => {\r\n    this.props.clearTodo()\r\n  }\r\n  handleClick = (type) => {\r\n    this.props.changeType\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}